name: 'cicd'
on:
  push:
    branches:
      - main
    # 也可以设置 tag 触发 ci
    # tags:
      # - 'v*'
jobs:
  cicd:
    runs-on: ubuntu-latest
    env:
      NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup node version
        uses: actions/setup-node@v3
        with:
          node-version: 16
          registry-url: 'https://registry.npmjs.org'
      - name: Install pnpm
        uses: pnpm/action-setup@v2.0.1
        with:
          version: 7
      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"
      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: Install
        run: pnpm install --frozen-lockfile
      - name: Configure git info
        run: |
          git config --global user.email "$GITHUB_ACTOR@gmail.com"
          git config --global user.name "$GITHUB_ACTOR"
      - name: Build
        run: pnpm turbo
      - name: Create Release Pull Request or Publish to npm
        id: changesets
        uses: changesets/action@v1
        with:
          version: pnpm ci:version
          publish: pnpm ci:publish
          title: 'chore: release verison'
          commit: 'chore: version packages'
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Build lib docs to dist if a publish happens
        if: steps.changesets.outputs.published == 'true'
        run: pnpm --filter @hadeshe93/lib-docs build:docs
      - name: Publish api reference docs if a publish happens
        if: steps.changesets.outputs.published == 'true'
        id: deploy
        uses: hadeshe93/gh-action-aliyun-oss@v0.0.1
        with:
          access-key-id: ${{ secrets.ACCESS_KEY_ID }}
          access-key-secret: ${{ secrets.ACCESS_KEY_SECRET }}
          bucket: 'hadeshe-prod'
          region: 'oss-cn-shenzhen'
          dest-path: '/lib-docs/'
          local-path: './apps/docs/docs/.vuepress/dist'